{"version":3,"sources":["components/Navigation/Navigation.js","components/UserCard/UserCard.js","components/UserCards/UserCards.js","components/UserDetails/UserDetails.js","components/AddressRow/AddressRow.js","components/Addresses/Addresses.js","components/Users/Users.js","components/Home/Home.js","components/Not/Not.js","components/App/App.js","index.js"],"names":["Navigation","props","className","activeClassName","to","UserCard","hrefString","id","class","src","picture","medium","alt","name","first","last","email","cell","UserCards","s12","m6","map","item","index","UserDetails","userProp","useParams","large","title","location","street","number","city","state","country","postcode","login","username","password","uuid","AddressRow","Addresses","length","Users","useState","list","setList","useEffect","a","spinner","document","getElementById","classList","add","NUMBER_OF_USERS_TO_FETCH","Math","floor","random","url","fetch","resp","json","data","remove","sortedAddresses","results","sort","b","fetchData","path","Home","Not","propTypes","PropTypes","array","App","exact","ReactDOM","render","StrictMode","hashType"],"mappings":"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","file":"static/js/main.9a114d6d.chunk.js","sourcesContent":["import { Navbar, Row } from 'react-materialize'\nimport { NavLink } from 'react-router-dom'\nexport default function Navigation (props) {\n  return (\n    <Row>\n      <Navbar className='pink darken-2'>\n        <NavLink activeClassName='active' to='/'>\n          Home\n        </NavLink>\n        <NavLink activeClassName='active' to='/users'>\n          Users\n        </NavLink>\n        <NavLink activeClassName='active' to='/addresses'>\n          Addresses\n        </NavLink>\n      </Navbar>\n    </Row>\n  )\n}\n","import React from 'react'\nimport { Row, Card } from 'react-materialize'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nexport default function UserCard ({ props }) {\n  const hrefString = '/user/' + props.id\n  return (\n    <Card>\n      <Row>\n        <div class='card-image center-self'>\n          <img\n            src={props.picture.medium}\n            className='circle responsive-img'\n            alt='avatar'\n          />\n        </div>\n      </Row>\n      <Row className='white blue-grey-text center-align'>\n        <h5>\n          <NavLink to={hrefString}>\n            <i class='material-icons'>zoom_in</i>\n            {props.name.first + ' ' + props.name.last}\n          </NavLink>\n        </h5>\n        <p className='white blue-grey-text left-align '>\n          <p class='email'>\n            <i class='material-icons'>email</i>\n            {props.email}\n          </p>\n          <p>\n            <i class='material-icons'>phone</i>\n            <span>{props.cell}</span>\n          </p>\n        </p>\n      </Row>\n    </Card>\n  )\n}\n\nUserCard.propTypes = {\n  name: {\n    first: PropTypes.string,\n    last: PropTypes.string\n  },\n  email: PropTypes.string,\n  cell: PropTypes.string,\n  picture: {\n    medium: PropTypes.string\n  },\n  index: PropTypes.number\n}\n","import React from 'react'\nimport { Row, Col } from 'react-materialize'\nimport UserCard from '../UserCard/UserCard'\nimport PropTypes from 'prop-types'\n//import avatar from '../../assets/images/avatar.png';\nexport default function UserCards ({ props }) {\n  return (\n    <Row>\n      <Col s12 m6>\n        {props &&\n          props.map((item, index) => {\n            item['id'] = index\n\n            return <UserCard props={item} />\n          })}\n      </Col>\n    </Row>\n  )\n}\n\nUserCard.propTypes = {\n  list: PropTypes.array\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Row, Card } from 'react-materialize'\n//import PropTypes from \"prop-types\";\n\nexport default function UserDetails ({ props }) {\n  //let index = 2;\n  let { id } = useParams()\n  let userProp = props[id]\n  //          <p>{`${userProp.location.street.number} ${props.location.street.name}`}</p>\n  return (\n    <>\n      <Row>\n        <div class='center-self'>\n          <img\n            src={userProp.picture.large}\n            className='responsive-img'\n            alt='avatar'\n          />\n        </div>\n      </Row>\n      <Row className='white blue-grey-text center-align'>\n        <h5>{userProp.name.first + ' ' + userProp.name.last}</h5>\n        <p className='white blue-grey-text left-align '>\n          <div class='user-address'>\n            <p>\n              <h>Email:</h> {userProp.email}\n            </p>\n            <p>Phone: {userProp.cell}</p>\n          </div>\n          <h6>Mailing address:</h6>\n          <div class='user-address'>\n            <p>{`${userProp.name.title} ${userProp.name.first} ${userProp.name.last}`}</p>\n            <p>{`${userProp.location.street.number} ${userProp.location.street.name}`}</p>\n            <p>{`${userProp.location.city} ${userProp.location.state}`}</p>\n            <p>{`${userProp.location.country} ${userProp.location.postcode}`}</p>\n          </div>\n          <h6>User Application Identifiers:</h6>\n          <div class='user-address'>\n            <p>\n              <h>Username:</h> {userProp.login.username}\n            </p>\n            <p>\n              <h>Password:</h> {userProp.login.password}\n            </p>\n          </div>\n          <p>\n            <h>UUID:</h> {userProp.login.uuid}\n          </p>\n        </p>\n      </Row>\n    </>\n  )\n}\n/*\nUserDetails.propTypes = {\n  name: {\n    first: PropTypes.string,\n    last: PropTypes.string,\n  },\n  email: PropTypes.string,\n  cell: PropTypes.string,\n  picture: {\n    medium: PropTypes.string,\n  },\n};\n*/\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nexport default function AddressRow ({ props }) {\n  const hrefString = '/user/' + props.id\n  return (\n    <tr>\n      <td>\n        <NavLink to={hrefString}>{props.name.last}</NavLink>\n      </td>\n      <td>{props.name.first}</td>\n      <td>{props.location.country}</td>\n      <td>{props.location.state}</td>\n      <td>{props.location.city}</td>\n      <td>{`${props.location.street.number} ${props.location.street.name}`}</td>\n      <td>{props.location.postcode}</td>\n    </tr>\n  )\n}\n\nAddressRow.propTypes = {\n  name: {\n    first: PropTypes.string,\n    last: PropTypes.string\n  },\n  location: {\n    country: PropTypes.string,\n    state: PropTypes.string,\n    city: PropTypes.string,\n    postcode: PropTypes.string,\n    street: {\n      number: PropTypes.number,\n      name: PropTypes.string\n    }\n  }\n}\n","import { Table } from \"react-materialize\";\nimport AddressRow from \"../AddressRow/AddressRow\";\n\nexport default function Addresses({props}) {\n  if (props && props.length) {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>Last</th>\n            <th>First</th>\n            <th>Country</th>\n            <th>State</th>\n            <th>City</th>\n            <th>Street</th>\n            <th>PostCode</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props && props.map((item, index) => {\n            item[\"id\"] = index;\n            return (\n            <AddressRow props={item} />);}\n          )}\n      </tbody>\n      </Table>\n    );\n  } else {\n    return null;\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport UserCards from \"../UserCards/UserCards\";\nimport UserDetails from \"../UserDetails/UserDetails\";\nimport Addresses from \"../Addresses/Addresses\";\n\nexport default function Users(props) {\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      let spinner = document.getElementById(\"spinner\");\n      if (spinner) {\n        spinner.classList.add(\"show\");\n      }\n      const NUMBER_OF_USERS_TO_FETCH = Math.floor(Math.random() * 17) + 16;\n      const SEED = \"murr0391\";\n      const url = `https://randomuser.me/api/?nat=ca,us,au,nz,gb&seed=${SEED}&format=json&results=${NUMBER_OF_USERS_TO_FETCH}`;\n      const resp = await fetch(url);\n      const data = await resp.json();\n      if (spinner) {\n        spinner.classList.remove(\"show\");\n      }\n      const sortedAddresses = data.results.sort((a, b) => {\n        if (a.name.last < b.name.last) {\n          return -1;\n        } else if (a.name.last > b.name.last) {\n          return 1;\n        } else return 0;\n      });\n      setList(sortedAddresses);\n    }\n\n    fetchData();\n  }, []);\n\n  if (!list || !list.length) {\n    return <p>Loading users ...</p>;\n  } else {\n    return (\n      <div>\n        <Route path=\"/users\">\n          <UserCards props={list} />\n        </Route>\n        <Route path=\"/user/:id\">\n          <UserDetails props={list} />\n        </Route>\n        <Route path=\"/addresses\">\n          <Addresses props={list} />\n        </Route>\n      </div>\n    );\n    //return (<UserCards props={list} />);\n  }\n}\n\n/*\n  return (\n    <Row>\n      <Col s12 m6>\n        {(!list || !list.length) && <p>There are no users yet</p>}\n        {list && list.map((item) =>  <UserCard props={item}/>\n\n\n\n\n        )}\n      </Col>\n    </Row>\n  );\n}\n\n\n    <div className=\"users\">\n      <p>This is the users page</p>\n      {!list.length && <p>There are no users yet</p>}\n      {list.map((item) => (\n        <p key={item.key}>\n          {item.name.title +\n            \" \" +\n            item.name.first +\n            \" \" +\n            item.name.last +\n            \" \" +\n            item.email +\n            \" \" +\n            item.cell}\n        </p>\n      ))}\n    </div>\n*/\n","import PropTypes from 'prop-types'\n//used to be part of react... now its own module\n/*\n        The REQUIRED props isAlive and anything are being passed to this\n        component. In App.js you can remove these to see the generated errors.\n*/\n\nexport default function Home (props) {\n  return (\n    <div className='home left-align'>\n\n      <p>\n        This responsive web application permits you to view user information via cards or an\n        address list. If you click on the username in the card, you will get\n        some detailed information about the user.\n      </p>\n      <p>\n        You can also use the browser's address bar to navigate through this application.\n      </p>\n      <p>Available endpoints are /, /users, /user/:id, /addresses</p>\n      <p>I wanted to use /users/:id but I could not get it working</p>\n    </div>\n  )\n}\n\n//add PropTypes\nHome.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  findPlanet: PropTypes.func,\n  isAlive: PropTypes.bool.isRequired,\n  anything: PropTypes.any.isRequired,\n  myobj: PropTypes.shape({\n    email: PropTypes.string,\n    age: PropTypes.number\n  }),\n  greet: PropTypes.oneOf(['hello', 'goodbye']),\n  something: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n","export default function Not(props) {\n  return (\n    <div className=\"not\">\n      <p>\n        The page you are looking for does not exist. Please use the navigation\n        above to access the available pages.\n      </p>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Users from \"../Users/Users\";\nimport Home from \"../Home/Home\";\nimport Not from \"../Not/Not\";\nimport { Container } from \"react-materialize\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Navigation />\n      </header>\n      <main>\n        <Container>\n          <Switch>\n            <Route path=\"/addresses\">\n              <Users />\n            </Route>\n            <Route path=\"/users\" exact>\n              <Users />\n            </Route>\n            <Route path=\"/user/:id\">\n              <Users />\n            </Route>\n            <Route path=\"/404\">\n              <Not />\n            </Route>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Redirect to=\"/404\" />\n          </Switch>\n        </Container>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter hashType=\"hashbang\">\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}